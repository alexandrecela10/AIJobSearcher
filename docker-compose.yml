version: '3.8'

services:
  # Your Next.js JobSearchingRobot app
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job-searcher-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    volumes:
      # Persist data and uploads outside container
      - ./data:/app/data
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL database (for future encryption features)
  postgres:
    image: postgres:15-alpine
    container_name: job-searcher-db
    environment:
      - POSTGRES_USER=jobsearcher
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
      - POSTGRES_DB=jobsearcher
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    # Don't expose to host (only app can access)
    # ports:
    #   - "5432:5432"

  # Nginx reverse proxy (optional, for production)
  # Uncomment when you want SSL and custom domain
  # nginx:
  #   image: nginx:alpine
  #   container_name: job-searcher-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - app
  #   restart: unless-stopped
  #   networks:
  #     - app-network

volumes:
  # Named volume for PostgreSQL data
  postgres_data:
    driver: local

networks:
  # Custom network for service communication
  app-network:
    driver: bridge
